services:
  traefik:
    image: traefik:v3.1
    command:
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true
      - --entrypoints.web.address=:${TRAEFIK_HTTP_PORT}
      - --api.dashboard=true
    ports:
      - "${TRAEFIK_HTTP_PORT}:${TRAEFIK_HTTP_PORT}"
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic:/etc/traefik/dynamic:ro
    environment:
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=PathPrefix(`/dashboard`) || PathPrefix(`/api`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.middlewares.basicauth.basicauth.users=${TRAEFIK_DASHBOARD_USER}:${TRAEFIK_DASHBOARD_PASS}"
      - "traefik.http.routers.dashboard.middlewares=basicauth"
    networks: [core]

   firewall:
    build:
      context: ./firewall
      dockerfile: Dockerfile
    image: local/fastapi-firewall:latest   # also tags your local build
    container_name: ai-firewall
    restart: unless-stopped
    env_file: .env
    environment:
      TZ: "${TZ}"
      FIREWALL_MODE: "${FIREWALL_MODE}"
      FIREWALL_UPSTREAM: "${FIREWALL_UPSTREAM}"
      FIREWALL_BLOCKLIST_PATH: "${FIREWALL_BLOCKLIST_PATH}"
      FIREWALL_OUTPUT_RULES_PATH: "${FIREWALL_OUTPUT_RULES_PATH}"
    volumes:
      - firewall_data:/data
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://127.0.0.1:8000/healthz"]
      interval: 15s
      timeout: 3s
      retries: 20
    networks:
      - ai_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.firewall.rule=Host(`fw.localhost`)"
      - "traefik.http.routers.firewall.entrypoints=web"
      - "traefik.http.services.firewall.loadbalancer.server.port=8000"

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    environment:
      - TZ=${TZ}
      - OLLAMA_API_BASE=http://ollama:11434
      - WEBUI_AUTH=${OPENWEBUI_AUTH}
      - WEBUI_USERNAME=${OPENWEBUI_ADMIN}
      - WEBUI_PASSWORD=${OPENWEBUI_PASSWORD}
    volumes:
      - ./volumes/openwebui:/app/backend/data
    ports:
      - "${OPENWEBUI_PORT}:8080"
    depends_on:
      - ollama
    networks: [core]

  ollama:
    image: ollama/ollama:latest
    environment:
      - TZ=${TZ}
      - OLLAMA_NUM_GPU=${OLLAMA_NUM_GPU}
    volumes:
      - ./volumes/ollama:/root/.ollama
    ports:
      - "${OLLAMA_PORT}:11434"
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
    networks: [core]

networks:
  core: {}
